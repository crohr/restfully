1.3.0

* Require 'activesupport' instead of 'backports' to avoid deprecation warning
* Loosen dependencies for gems that are stable anyway
* Drop support for Ruby < 2.3
* Remove dependency on 1.6 version of rest-client, as requested by users ;
  since PR#7 was accepted, we have a way to instruct restfully to pass
  appropriate ssl options should restfully be used against a service that is
  hosted on a server with no valid ssl credential. Need to restrict version to
  under 2.0 for ruby versions under 2.0. (Patch from David Margery)
* For webmock versions as from 2.0.0, webmock does not match credentials
  provided in Authorization header and credentials provided in the userinfo of
  a url. Update test to reflect that. (Patch from David Margery)

1.2.0

* Send the media-type default type when requesting a resource directly
* Update gem dependencies to allow for working on older rubies

1.1.1

* Correctly handles redirections

1.1.0

* Drop support for ruby 1.8.7
* Optimize single item retrieval from collection, using direct fetch when possible

1.0.8

* Update BonFIRE media-type.

1.0.7
* Add a default user-agent to restfully so its (raw) usage can be discovered in logs.

1.0.6
* Added new element types for BonFIRE media-type.
* Switch to CeCILL-B license.

1.0.5
* Explicit dependency on ripl-0.6.1

1.0.4
* Add support for Grid'5000 environment media-type.

1.0.3
* Fix bug in link when no :type is present.

1.0.2
* Output full response body on error.

1.0.1
* Add #to_hash alias for #properties.

1.0.0
* Support for NetworkEquipment variant in Grid'5000 media type.
* It is not longer mandatory for links to have a :type attribute.
* Removed application/vnd.grid5000+json. Replaced with application/vnd.grid5000.{collection,item}+json.
* Correctly handle head and query parameters given when loading a link.

1.0.0.rc2
* Limit backtrace displayed. 
* Fix some issues with configuration. 
* Execute given FILE or shell input in a sandbox. Gives access to `get`,
  `post`, `put`, `delete`, `head`, `logger` without the need to go through
  `session`.

1.0.0.rc1
* Command line arguments have changed: URI is now an option (`--uri` flag); if
  an argument is given, it is supposed to be a FILE that will be executed in
  the current context.
* Added support for execution of code given via FILE or STDIN, in the
  context of the declared Restfully::Session. 
* Switch to Ripl instead of IRB.

0.8.8
* Allow to require additional files from a URI.
* Create session object immediately when starting the shell.

0.8.7
* Clean up Restfully bin, and do not attempt to overwrite Readline::History on Windows OS.

0.8.6
* Small bug fix in application/vnd.bonfire+xml media-type.
* Add --no-cache flag to disable client-side caching.

0.8.5
* Make application/vnd.bonfire+xml support XML nodes given in the ruby hash when submitting or updating a resource.

0.8.4
* Allow media types to display a custom banner when pretty-printing resources.

0.8.3
* Be a bit more clever when loading items to fetch a property.
* RESTFULLY_CONFIG environment variable takes precedence over :configuration_file

0.8.2
* Fix Grid'5000 media-type for access with :[](key), key being an integer.
* Outputs retry attempts at WARN level.

0.8.1
* Guess the content-type of the payload to send on a POST, based on the content-type of the original response to GET.

0.8.0
* Add client-side caching with Rack::Cache and rest-client-components.
* Reorganize code so that it is based around a catalog of media-types. It is now easy to support other media-types.
* Support for application/vnd.bonfire+xml media-type (disabled by default).
* Deal with resource fragments (use #expand on a resource to fetch it completely).
* Add automatic retry on connection or server error.
* Better debugging output: full request and response details.
* Add support for configuration file and media-type requirements within Restfully::Session. 
* A RESTFULLY_CONFIG environment variable can be set to the location of the configuration file.

0.6.2
* Handle the case when a RestClient exception is raised and it does not contain a response.

0.6.1
* Removed unnecessary logging.

0.6.0
* Fixed collection traversal.
* Query parameters that are Arrays are no longer joined.
* Added 'next' as valid link relationship.

0.5.10
* Direct lookup to the resource if it cannot be found in the collection (for APIs that do not return all the items in a collection) (priteau)
* Automatically load next pages of a collection when iterating through it

0.5.9
* fixed bug in #http_methods that made a resource not removable unless force reloading it

0.5.8
* explicit dependency on 'json' >= 1.2.0

0.5.7
* fixed bug due to the way RestClient handles custom headers (esp. the Accept HTTP header)
* added PUT method

0.5.6
* requires rest-client 1.4+

0.5.5
* raise an error if Content-Type of the response is nil or empty
* start to use webmock for better tests

0.5.4
* refactored Restfully::Parsing module. Allow to define its own parsers for specific content types
* automatically load root resource when calling session.root

0.5.3
* can handle text/* content, useful when using low-level methods on a session object (session.{get,post,delete,put})
* can now find a collection item using collection[:symbol] even if item uid is an integer: collection[:'12345']
* default_headers no longer overwrite custom headers set by user
* fixed bug with latest version of rest-client

0.5.2
* support for DELETE requests. Use resource.delete(options)
* fixed bug in resource.load(:reload => true)

0.5.1
* fixed bug in resource.reload

0.5.0
* support for POST requests. Use resource.submit(payload, options)

0.4.1
* added a require 'yaml' in restfully.rb (priteau);
* added an introductory message when using the command-line tool;
* removed [root_path] from the list of options in command-line client 'Usage' banner (priteau);
* added test for :configuration_file option;
* tests are no longer failing on ruby1.9;

0.4.0
* removed 'root_path' option: 'base_uri' must point to the starting resource;
* objects can now be pretty printed using 'pp object';
* Restfully::Collection now include the Enumerable module;
* Restfully::Collection inherits from Restfully::Resource;
* 'object.uid' is no longer valid. Use 'object["uid"]' instead;
